{
  "contractName": "IRFTNFT",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.4.24;\n\n/**\n * @title RFT Non-Fungible Token interface, that is supplied with Fungible Token\n * @notice Non-Fungible Token interface\n */\ninterface IRFTNFT {\n    /**\n     * @dev This emits when ownership of any NFT changes by any mechanism.\n     *  This event emits when NFTs are created (`from` == 0) and destroyed\n     *  (`to` == 0). Exception: during contract creation, any number of NFTs\n     *  may be created and assigned without emitting Transfer. At the time of\n     *  any transfer, the approved address for that NFT (if any) is reset to none.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev This emits when the approved address for an NFT is changed or\n     * reaffirmed. The zero address indicates there is no approved address.\n     * When a Transfer event emits, this also indicates that the approved\n     * address for that NFT (if any) is reset to none.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n    \n    /**\n     * @dev This emits when an operator is enabled or disabled for an owner.\n     *  The operator can manage all NFTs of the owner.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @notice Count all NFTs assigned to an owner\n     * @dev NFTs assigned to the zero address are considered invalid, and this\n     *  function throws for queries about the zero address.\n     * @param _owner - An address for whom to query the balance\n     * @return The number of NFTs owned by `_owner`, possibly zero\n     */\n    function balanceOf(address _owner) external view returns (uint256 balance);\n\n    /**\n     * @notice Find the owner of an NFT\n     * @dev NFTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param _tokenId - The identifier for an NFT\n     * @return The address of the owner of the NFT\n     */\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\n\n    /**\n     * @notice Set or reaffirm the approved address for an NFT\n     * @dev The zero address indicates there is no approved address.\n     * @dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n     *  operator of the current owner.\n     * @param _approved - The new approved NFT controller\n     * @param _tokenId - The NFT to approve\n     */\n    function approve(address _approved, uint256 _tokenId) external;\n    \n    /**\n     * @notice Get the approved address for a single NFT\n     * @dev Throws if `_tokenId` is not a valid NFT\n     * @param _tokenId - The NFT to find the approved address for\n     * @return The approved address for this NFT, or the zero address if there is none\n     */\n    function getApproved(uint256 _tokenId) external view returns (address operator);\n\n    /**\n     * @notice Enable or disable approval for a third party (\"operator\") to manage\n     *  all of `msg.sender`'s assets.\n     * @dev Emits the ApprovalForAll event. The contract MUST allow\n     *  multiple operators per owner.\n     * @param _operator - Address to add to the set of authorized operators.\n     * @param _approved - True if the operator is approved, false to revoke approval\n     */\n    function setApprovalForAll(\n        address _operator, \n        bool _approved\n    ) external;\n    \n    /**\n     * @notice Query if an address is an authorized operator for another address\n     * @param _owner - The address that owns the NFTs\n     * @param _operator - The address that acts on behalf of the owner\n     * @return True if `_operator` is an approved operator for `_owner`, false otherwise\n     */\n    function isApprovedForAll(\n        address _owner, \n        address _operator\n    ) \n        external \n        view \n        returns (bool);\n\n    /**\n     * @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n     *  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n     *  THEY MAY BE PERMANENTLY LOST\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT.\n     * @param _from - The current owner of the NFT\n     * @param _to - The new owner\n     * @param _tokenId - The NFT to transfer\n     */\n    function transferFrom(\n        address _from, \n        address _to, \n        uint256 _tokenId\n    ) external;\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT. When transfer is complete, this function\n     *  checks if `_to` is a smart contract (code size > 0). If so, it calls\n     *  `onERC721Received` on `_to` and throws if the return value is not\n     *  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n     * @param _from - The current owner of the NFT\n     * @param _to - The new owner\n     * @param _tokenId - The NFT to transfer\n     */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) external;\n\n    /**\n     * @notice Transfers the ownership of an NFT from one address to another address\n     * @dev Throws unless `msg.sender` is the current owner, an authorized\n     *  operator, or the approved address for this NFT. Throws if `_from` is\n     *  not the current owner. Throws if `_to` is the zero address. Throws if\n     *  `_tokenId` is not a valid NFT. When transfer is complete, this function\n     *  checks if `_to` is a smart contract (code size > 0). If so, it calls\n     *  `onERC721Received` on `_to` and throws if the return value is not\n     *  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n     * @param _from - The current owner of the NFT\n     * @param _to - The new owner\n     * @param _tokenId - The NFT to transfer\n     * @param _data - Additional data with no specified format, sent in call to `_to`\n     */\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes _data\n    ) public;\n}",
  "sourcePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/IRFTNFT.sol",
  "ast": {
    "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/IRFTNFT.sol",
    "exportedSymbols": {
      "IRFTNFT": [
        271
      ]
    },
    "id": 272,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 173,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title RFT Non-Fungible Token interface, that is supplied with Fungible Token\n@notice Non-Fungible Token interface",
        "fullyImplemented": false,
        "id": 271,
        "linearizedBaseContracts": [
          271
        ],
        "name": "IRFTNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when ownership of any NFT changes by any mechanism.\n This event emits when NFTs are created (`from` == 0) and destroyed\n (`to` == 0). Exception: during contract creation, any number of NFTs\n may be created and assigned without emitting Transfer. At the time of\n any transfer, the approved address for that NFT (if any) is reset to none.",
            "id": 181,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "606:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "636:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "664:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:97:3"
            },
            "src": "582:112:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when the approved address for an NFT is changed or\nreaffirmed. The zero address indicates there is no approved address.\nWhen a Transfer event emits, this also indicates that the approved\naddress for that NFT (if any) is reset to none.",
            "id": 189,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1019:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": true,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1050:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": true,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1084:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1009:104:3"
            },
            "src": "995:119:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when an operator is enabled or disabled for an owner.\n The operator can manage all NFTs of the owner.",
            "id": 197,
            "name": "ApprovalForAll",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1302:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "indexed": true,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1333:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1367:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:94:3"
            },
            "src": "1272:115:3"
          },
          {
            "body": null,
            "documentation": "@notice Count all NFTs assigned to an owner\n@dev NFTs assigned to the zero address are considered invalid, and this\n function throws for queries about the zero address.\n@param _owner - An address for whom to query the balance\n@return The number of NFTs owned by `_owner`, possibly zero",
            "id": 204,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1749:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1748:16:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1788:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1787:17:3"
            },
            "scope": 271,
            "src": "1730:75:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Find the owner of an NFT\n@dev NFTs assigned to zero address are considered invalid, and queries\n about them do throw.\n@param _tokenId - The identifier for an NFT\n@return The address of the owner of the NFT",
            "id": 211,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2093:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:18:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2134:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2133:15:3"
            },
            "scope": 271,
            "src": "2076:73:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Set or reaffirm the approved address for an NFT\n@dev The zero address indicates there is no approved address.\n@dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n operator of the current owner.\n@param _approved - The new approved NFT controller\n@param _tokenId - The NFT to approve",
            "id": 218,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2543:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2562:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2542:37:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:3"
            },
            "scope": 271,
            "src": "2526:63:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Get the approved address for a single NFT\n@dev Throws if `_tokenId` is not a valid NFT\n@param _tokenId - The NFT to find the approved address for\n@return The approved address for this NFT, or the zero address if there is none",
            "id": 225,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2898:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2897:18:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "2939:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2938:18:3"
            },
            "scope": 271,
            "src": "2877:80:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Enable or disable approval for a third party (\"operator\") to manage\n all of `msg.sender`'s assets.\n@dev Emits the ApprovalForAll event. The contract MUST allow\n multiple operators per owner.\n@param _operator - Address to add to the set of authorized operators.\n@param _approved - True if the operator is approved, false to revoke approval",
            "id": 232,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3404:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3432:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3394:58:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3461:0:3"
            },
            "scope": 271,
            "src": "3368:94:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Query if an address is an authorized operator for another address\n@param _owner - The address that owns the NFTs\n@param _operator - The address that acts on behalf of the owner\n@return True if `_operator` is an approved operator for `_owner`, false otherwise",
            "id": 241,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3818:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3818:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3843:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3808:58:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3917:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3916:6:3"
            },
            "scope": 271,
            "src": "3783:140:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n THEY MAY BE PERMANENTLY LOST\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer",
            "id": 250,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4552:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4576:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4598:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4542:78:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4629:0:3"
            },
            "scope": 271,
            "src": "4521:109:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Transfers the ownership of an NFT from one address to another address\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer",
            "id": 259,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "5443:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5443:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "5466:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "5487:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5433:76:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:0:3"
            },
            "scope": 271,
            "src": "5408:111:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Transfers the ownership of an NFT from one address to another address\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer\n@param _data - Additional data with no specified format, sent in call to `_to`",
            "id": 270,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "6418:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "6441:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6441:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "6462:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6462:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "6488:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6488:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6408:97:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:3"
            },
            "scope": 271,
            "src": "6383:130:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 272,
        "src": "154:6361:3"
      }
    ],
    "src": "0:6515:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/IRFTNFT.sol",
      "exportedSymbols": {
        "IRFTNFT": [
          271
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.4",
            ".24"
          ]
        },
        "id": 173,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@title RFT Non-Fungible Token interface, that is supplied with Fungible Token\n@notice Non-Fungible Token interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            271
          ],
          "name": "IRFTNFT",
          "scope": 272
        },
        "children": [
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev This emits when ownership of any NFT changes by any mechanism.\n This event emits when NFTs are created (`from` == 0) and destroyed\n (`to` == 0). Exception: during contract creation, any number of NFTs\n may be created and assigned without emitting Transfer. At the time of\n any transfer, the approved address for that NFT (if any) is reset to none.",
              "name": "Transfer"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "from",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 174,
                        "name": "ElementaryTypeName",
                        "src": "606:7:3"
                      }
                    ],
                    "id": 175,
                    "name": "VariableDeclaration",
                    "src": "606:20:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 176,
                        "name": "ElementaryTypeName",
                        "src": "636:7:3"
                      }
                    ],
                    "id": 177,
                    "name": "VariableDeclaration",
                    "src": "636:18:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "tokenId",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 178,
                        "name": "ElementaryTypeName",
                        "src": "664:7:3"
                      }
                    ],
                    "id": 179,
                    "name": "VariableDeclaration",
                    "src": "664:23:3"
                  }
                ],
                "id": 180,
                "name": "ParameterList",
                "src": "596:97:3"
              }
            ],
            "id": 181,
            "name": "EventDefinition",
            "src": "582:112:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev This emits when the approved address for an NFT is changed or\nreaffirmed. The zero address indicates there is no approved address.\nWhen a Transfer event emits, this also indicates that the approved\naddress for that NFT (if any) is reset to none.",
              "name": "Approval"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "owner",
                      "scope": 189,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 182,
                        "name": "ElementaryTypeName",
                        "src": "1019:7:3"
                      }
                    ],
                    "id": 183,
                    "name": "VariableDeclaration",
                    "src": "1019:21:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "approved",
                      "scope": 189,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 184,
                        "name": "ElementaryTypeName",
                        "src": "1050:7:3"
                      }
                    ],
                    "id": 185,
                    "name": "VariableDeclaration",
                    "src": "1050:24:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "tokenId",
                      "scope": 189,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 186,
                        "name": "ElementaryTypeName",
                        "src": "1084:7:3"
                      }
                    ],
                    "id": 187,
                    "name": "VariableDeclaration",
                    "src": "1084:23:3"
                  }
                ],
                "id": 188,
                "name": "ParameterList",
                "src": "1009:104:3"
              }
            ],
            "id": 189,
            "name": "EventDefinition",
            "src": "995:119:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev This emits when an operator is enabled or disabled for an owner.\n The operator can manage all NFTs of the owner.",
              "name": "ApprovalForAll"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "owner",
                      "scope": 197,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 190,
                        "name": "ElementaryTypeName",
                        "src": "1302:7:3"
                      }
                    ],
                    "id": 191,
                    "name": "VariableDeclaration",
                    "src": "1302:21:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "operator",
                      "scope": 197,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 192,
                        "name": "ElementaryTypeName",
                        "src": "1333:7:3"
                      }
                    ],
                    "id": 193,
                    "name": "VariableDeclaration",
                    "src": "1333:24:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "approved",
                      "scope": 197,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 194,
                        "name": "ElementaryTypeName",
                        "src": "1367:4:3"
                      }
                    ],
                    "id": 195,
                    "name": "VariableDeclaration",
                    "src": "1367:13:3"
                  }
                ],
                "id": 196,
                "name": "ParameterList",
                "src": "1292:94:3"
              }
            ],
            "id": 197,
            "name": "EventDefinition",
            "src": "1272:115:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": true,
              "documentation": "@notice Count all NFTs assigned to an owner\n@dev NFTs assigned to the zero address are considered invalid, and this\n function throws for queries about the zero address.\n@param _owner - An address for whom to query the balance\n@return The number of NFTs owned by `_owner`, possibly zero",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "balanceOf",
              "payable": false,
              "scope": 271,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 204,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 198,
                        "name": "ElementaryTypeName",
                        "src": "1749:7:3"
                      }
                    ],
                    "id": 199,
                    "name": "VariableDeclaration",
                    "src": "1749:14:3"
                  }
                ],
                "id": 200,
                "name": "ParameterList",
                "src": "1748:16:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "balance",
                      "scope": 204,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 201,
                        "name": "ElementaryTypeName",
                        "src": "1788:7:3"
                      }
                    ],
                    "id": 202,
                    "name": "VariableDeclaration",
                    "src": "1788:15:3"
                  }
                ],
                "id": 203,
                "name": "ParameterList",
                "src": "1787:17:3"
              }
            ],
            "id": 204,
            "name": "FunctionDefinition",
            "src": "1730:75:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": true,
              "documentation": "@notice Find the owner of an NFT\n@dev NFTs assigned to zero address are considered invalid, and queries\n about them do throw.\n@param _tokenId - The identifier for an NFT\n@return The address of the owner of the NFT",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "ownerOf",
              "payable": false,
              "scope": 271,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 211,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 205,
                        "name": "ElementaryTypeName",
                        "src": "2093:7:3"
                      }
                    ],
                    "id": 206,
                    "name": "VariableDeclaration",
                    "src": "2093:16:3"
                  }
                ],
                "id": 207,
                "name": "ParameterList",
                "src": "2092:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 211,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 208,
                        "name": "ElementaryTypeName",
                        "src": "2134:7:3"
                      }
                    ],
                    "id": 209,
                    "name": "VariableDeclaration",
                    "src": "2134:13:3"
                  }
                ],
                "id": 210,
                "name": "ParameterList",
                "src": "2133:15:3"
              }
            ],
            "id": 211,
            "name": "FunctionDefinition",
            "src": "2076:73:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "documentation": "@notice Set or reaffirm the approved address for an NFT\n@dev The zero address indicates there is no approved address.\n@dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n operator of the current owner.\n@param _approved - The new approved NFT controller\n@param _tokenId - The NFT to approve",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "approve",
              "payable": false,
              "scope": 271,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_approved",
                      "scope": 218,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 212,
                        "name": "ElementaryTypeName",
                        "src": "2543:7:3"
                      }
                    ],
                    "id": 213,
                    "name": "VariableDeclaration",
                    "src": "2543:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 218,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 214,
                        "name": "ElementaryTypeName",
                        "src": "2562:7:3"
                      }
                    ],
                    "id": 215,
                    "name": "VariableDeclaration",
                    "src": "2562:16:3"
                  }
                ],
                "id": 216,
                "name": "ParameterList",
                "src": "2542:37:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 217,
                "name": "ParameterList",
                "src": "2588:0:3"
              }
            ],
            "id": 218,
            "name": "FunctionDefinition",
            "src": "2526:63:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": true,
              "documentation": "@notice Get the approved address for a single NFT\n@dev Throws if `_tokenId` is not a valid NFT\n@param _tokenId - The NFT to find the approved address for\n@return The approved address for this NFT, or the zero address if there is none",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "getApproved",
              "payable": false,
              "scope": 271,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 219,
                        "name": "ElementaryTypeName",
                        "src": "2898:7:3"
                      }
                    ],
                    "id": 220,
                    "name": "VariableDeclaration",
                    "src": "2898:16:3"
                  }
                ],
                "id": 221,
                "name": "ParameterList",
                "src": "2897:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "operator",
                      "scope": 225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 222,
                        "name": "ElementaryTypeName",
                        "src": "2939:7:3"
                      }
                    ],
                    "id": 223,
                    "name": "VariableDeclaration",
                    "src": "2939:16:3"
                  }
                ],
                "id": 224,
                "name": "ParameterList",
                "src": "2938:18:3"
              }
            ],
            "id": 225,
            "name": "FunctionDefinition",
            "src": "2877:80:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "documentation": "@notice Enable or disable approval for a third party (\"operator\") to manage\n all of `msg.sender`'s assets.\n@dev Emits the ApprovalForAll event. The contract MUST allow\n multiple operators per owner.\n@param _operator - Address to add to the set of authorized operators.\n@param _approved - True if the operator is approved, false to revoke approval",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "setApprovalForAll",
              "payable": false,
              "scope": 271,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_operator",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 226,
                        "name": "ElementaryTypeName",
                        "src": "3404:7:3"
                      }
                    ],
                    "id": 227,
                    "name": "VariableDeclaration",
                    "src": "3404:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_approved",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 228,
                        "name": "ElementaryTypeName",
                        "src": "3432:4:3"
                      }
                    ],
                    "id": 229,
                    "name": "VariableDeclaration",
                    "src": "3432:14:3"
                  }
                ],
                "id": 230,
                "name": "ParameterList",
                "src": "3394:58:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 231,
                "name": "ParameterList",
                "src": "3461:0:3"
              }
            ],
            "id": 232,
            "name": "FunctionDefinition",
            "src": "3368:94:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": true,
              "documentation": "@notice Query if an address is an authorized operator for another address\n@param _owner - The address that owns the NFTs\n@param _operator - The address that acts on behalf of the owner\n@return True if `_operator` is an approved operator for `_owner`, false otherwise",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "isApprovedForAll",
              "payable": false,
              "scope": 271,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 233,
                        "name": "ElementaryTypeName",
                        "src": "3818:7:3"
                      }
                    ],
                    "id": 234,
                    "name": "VariableDeclaration",
                    "src": "3818:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_operator",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 235,
                        "name": "ElementaryTypeName",
                        "src": "3843:7:3"
                      }
                    ],
                    "id": 236,
                    "name": "VariableDeclaration",
                    "src": "3843:17:3"
                  }
                ],
                "id": 237,
                "name": "ParameterList",
                "src": "3808:58:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 238,
                        "name": "ElementaryTypeName",
                        "src": "3917:4:3"
                      }
                    ],
                    "id": 239,
                    "name": "VariableDeclaration",
                    "src": "3917:4:3"
                  }
                ],
                "id": 240,
                "name": "ParameterList",
                "src": "3916:6:3"
              }
            ],
            "id": 241,
            "name": "FunctionDefinition",
            "src": "3783:140:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "documentation": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n THEY MAY BE PERMANENTLY LOST\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "transferFrom",
              "payable": false,
              "scope": 271,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 250,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 242,
                        "name": "ElementaryTypeName",
                        "src": "4552:7:3"
                      }
                    ],
                    "id": 243,
                    "name": "VariableDeclaration",
                    "src": "4552:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 250,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 244,
                        "name": "ElementaryTypeName",
                        "src": "4576:7:3"
                      }
                    ],
                    "id": 245,
                    "name": "VariableDeclaration",
                    "src": "4576:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 250,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 246,
                        "name": "ElementaryTypeName",
                        "src": "4598:7:3"
                      }
                    ],
                    "id": 247,
                    "name": "VariableDeclaration",
                    "src": "4598:16:3"
                  }
                ],
                "id": 248,
                "name": "ParameterList",
                "src": "4542:78:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 249,
                "name": "ParameterList",
                "src": "4629:0:3"
              }
            ],
            "id": 250,
            "name": "FunctionDefinition",
            "src": "4521:109:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "documentation": "@notice Transfers the ownership of an NFT from one address to another address\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "safeTransferFrom",
              "payable": false,
              "scope": 271,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 259,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 251,
                        "name": "ElementaryTypeName",
                        "src": "5443:7:3"
                      }
                    ],
                    "id": 252,
                    "name": "VariableDeclaration",
                    "src": "5443:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 259,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 253,
                        "name": "ElementaryTypeName",
                        "src": "5466:7:3"
                      }
                    ],
                    "id": 254,
                    "name": "VariableDeclaration",
                    "src": "5466:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 259,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 255,
                        "name": "ElementaryTypeName",
                        "src": "5487:7:3"
                      }
                    ],
                    "id": 256,
                    "name": "VariableDeclaration",
                    "src": "5487:16:3"
                  }
                ],
                "id": 257,
                "name": "ParameterList",
                "src": "5433:76:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 258,
                "name": "ParameterList",
                "src": "5518:0:3"
              }
            ],
            "id": 259,
            "name": "FunctionDefinition",
            "src": "5408:111:3"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "documentation": "@notice Transfers the ownership of an NFT from one address to another address\n@dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n@param _from - The current owner of the NFT\n@param _to - The new owner\n@param _tokenId - The NFT to transfer\n@param _data - Additional data with no specified format, sent in call to `_to`",
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "safeTransferFrom",
              "payable": false,
              "scope": 271,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 260,
                        "name": "ElementaryTypeName",
                        "src": "6418:7:3"
                      }
                    ],
                    "id": 261,
                    "name": "VariableDeclaration",
                    "src": "6418:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 262,
                        "name": "ElementaryTypeName",
                        "src": "6441:7:3"
                      }
                    ],
                    "id": 263,
                    "name": "VariableDeclaration",
                    "src": "6441:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 264,
                        "name": "ElementaryTypeName",
                        "src": "6462:7:3"
                      }
                    ],
                    "id": 265,
                    "name": "VariableDeclaration",
                    "src": "6462:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 266,
                        "name": "ElementaryTypeName",
                        "src": "6488:5:3"
                      }
                    ],
                    "id": 267,
                    "name": "VariableDeclaration",
                    "src": "6488:11:3"
                  }
                ],
                "id": 268,
                "name": "ParameterList",
                "src": "6408:97:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 269,
                "name": "ParameterList",
                "src": "6512:0:3"
              }
            ],
            "id": 270,
            "name": "FunctionDefinition",
            "src": "6383:130:3"
          }
        ],
        "id": 271,
        "name": "ContractDefinition",
        "src": "154:6361:3"
      }
    ],
    "id": 272,
    "name": "SourceUnit",
    "src": "0:6515:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-09T13:44:50.021Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "The zero address indicates there is no approved address.Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.",
        "params": {
          "_approved": "- The new approved NFT controller",
          "_tokenId": "- The NFT to approve"
        }
      },
      "balanceOf(address)": {
        "details": "NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "- An address for whom to query the balance"
        },
        "return": "The number of NFTs owned by `_owner`, possibly zero"
      },
      "getApproved(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT",
        "params": {
          "_tokenId": "- The NFT to find the approved address for"
        },
        "return": "The approved address for this NFT, or the zero address if there is none"
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "- The address that acts on behalf of the owner",
          "_owner": "- The address that owns the NFTs"
        },
        "return": "True if `_operator` is an approved operator for `_owner`, false otherwise"
      },
      "ownerOf(uint256)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "- The identifier for an NFT"
        },
        "return": "The address of the owner of the NFT"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_from": "- The current owner of the NFT",
          "_to": "- The new owner",
          "_tokenId": "- The NFT to transfer"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_data": "- Additional data with no specified format, sent in call to `_to`",
          "_from": "- The current owner of the NFT",
          "_to": "- The new owner",
          "_tokenId": "- The NFT to transfer"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.",
        "params": {
          "_approved": "- True if the operator is approved, false to revoke approval",
          "_operator": "- Address to add to the set of authorized operators."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "- The current owner of the NFT",
          "_to": "- The new owner",
          "_tokenId": "- The NFT to transfer"
        }
      }
    },
    "title": "RFT Non-Fungible Token interface, that is supplied with Fungible Token"
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Set or reaffirm the approved address for an NFT"
      },
      "balanceOf(address)": {
        "notice": "Count all NFTs assigned to an owner"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single NFT"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an NFT"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of `msg.sender`'s assets."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST"
      }
    }
  }
}