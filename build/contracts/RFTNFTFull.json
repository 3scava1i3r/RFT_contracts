{
  "contractName": "RFTNFTFull",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceId_ERC165",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_allTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"InterfaceId_ERC165\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_allTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves to transfer selected NFT (_tokenId) by specific address (_to).\",\"params\":{\"_to\":\"- Receiver address of transfer approve for selected NFT\",\"_tokenId\":\"- Unique identifier of NFT\"}},\"balanceOf(address)\":{\"details\":\"Returns NFT Token balance of selected address (_owner), which means, how many NFT tokens owner of address has on his balance.\",\"params\":{\"_owner\":\"- Address of NFT holder\"}},\"getApproved(uint256)\":{\"details\":\"Returns address of approved for transfer address for selected NFT(_tokenId). \",\"params\":{\"_tokenId\":\"- Unique identifier of NFT\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if all NFT's of certain address(_owner) is approved to transfer by another address(_operator)\",\"params\":{\"_operator\":\"- Receipient address of transfer rights\",\"_owner\":\"- Address of NFT's owner\"}},\"name()\":{\"details\":\"Getter for RFT name\"},\"ownerOf(uint256)\":{\"details\":\"Returns owner address of selected NFT token (_tokenId).\",\"params\":{\"_tokenId\":\"- Unique identifier of NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safe implementation of transferFrom function, which additionally checks that NFT receiver address is NFT compatible by calling method of Receipient contract address and supplying sender address, previous owner of NFT, NFT id\",\"params\":{\"_from\":\"- Address of NFT owner\",\"_to\":\"- Address of NFT receiver\",\"_tokenId\":\"- Unique identifier of NFT\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Extended safeTransferFrom function with bytes parameter\",\"params\":{\"_data\":\"- Bytes additional transaction data\",\"_from\":\"- Address of NFT sender\",\"_to\":\"- Address of NFT receiver\",\"_tokenId\":\"- Unique identifier of NFT\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve/Disapprove(depends on _approved value) transfering of all  caller's NFTs by specific address (_to).\",\"params\":{\"_approved\":\"- Approval status\",\"_to\":\"- Receiver of approvals for all NFT's owned by caller address\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Getter for RFT symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT id from all NFT's array by using its index.\",\"params\":{\"_index\":\"- Index inside array of all NFT\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns NFT id owned by the supplied address and index in  the owner's NFT array. Index could be from 0 to n, where n is owner's balance of NFT's\",\"params\":{\"_index\":\"- Index inside array of owner's NFT\",\"_owner\":\"- Address of NFT's owner\"}},\"tokenURI(uint256)\":{\"details\":\"Get Uniform Resource Identifier of selected NFT \",\"params\":{\"_tokenId\":\"- Unique identifier of NFT\"}},\"totalSupply()\":{\"details\":\"Returns total amount of NFT's presented in this NFT contract\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer selected NFT (_tokenId) from owner (_from) to new owner(_to)\",\"params\":{\"_from\":\"- Address of NFT's owner \",\"_to\":\"- Address of NFT receiver\",\"_tokenId\":\"- Unique identifier of NFT\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approving is needed when you want to give rights for some identified party to transfer your token. Approval event will be generated once approved.\"},\"getApproved(uint256)\":{\"notice\":\"Return approved address for NFT, if there is none  approved address for this NFT, it will return zero address\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Returns true in case it was called  setApprovalForAll(_operator, true), otherwise - false\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Safe transfer is being used instead of transferFrom, in case we need  to check that recipient address is compatible with NFT (only in case if  receipient address is contract) \"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Needed in case you want to give rights to transfer of all your NFT's to some address\"},\"tokenByIndex(uint256)\":{\"notice\":\"All NFT's are added during minting to array, for example we have minted 2 NFT's for 2 users, in case we call tokenByIndex(1), it will return unique NFT id, which is located by index 1\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Every address in contract has array of NFT ids, and this  method provides ability to navigate in it.\"},\"totalSupply()\":{\"notice\":\"For example we have minted 2 NFTs for 2 users(1 NFT per 1 user),  in this case totalSupply will equal to 2\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transaction sender(msg.sender) should be owner or approved address by  approve or setApprovalForAll\"}}}},\"settings\":{\"compilationTarget\":{\"/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTFull.sol\":\"RFTNFTFull\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/juuzou/Documents/RFT_contracts/contracts/rft/IRFTNFT.sol\":{\"keccak256\":\"0xc00cde880a57561f13dd4538a041852b6d710aa72a53b1dafce8fe589cb45bb7\",\"urls\":[\"bzzr://11310446e329584816ac5fb8498d0bec37579f417245b19fb68cc9e1169e9917\"]},\"/home/juuzou/Documents/RFT_contracts/contracts/rft/IRFTNFTReceiver.sol\":{\"keccak256\":\"0xc59cd7d8ae9c6d0aeaef2f5225563354ca51f079d4934ef40d302fa13b2f43c0\",\"urls\":[\"bzzr://3058994b4b24c27fa0c0536f8637d7a35269704712b3e10119bb528bb7c4e170\"]},\"/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFT.sol\":{\"keccak256\":\"0x43d07a2b2e670e9b3d8f08dc6b6fe5901003e31ce68ae8cfcc02340695d782d1\",\"urls\":[\"bzzr://8872c3e78c2c1b68b387781912c5d10e3eb787ffb277c1c6137f0f269ef12c9b\"]},\"/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTEnumerable.sol\":{\"keccak256\":\"0x516990e05986058c5da478f65ae5c8f0e6532b824eee292e85e0d973d6c97522\",\"urls\":[\"bzzr://dbe6fed31bac5a60831bf53f51b8f7338178c81168a14d73b42d03bfb2b69961\"]},\"/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTFull.sol\":{\"keccak256\":\"0x608c4dcf12865965f197bb1d210bf7aa20fcb02157e7b799bf69913b92e44447\",\"urls\":[\"bzzr://3d46d8df7f55220a999621726adf48c7acec802bc075c18e7a66bd5f7d2aee85\"]},\"/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTMetadata.sol\":{\"keccak256\":\"0x08f050e5d273d16081806754608b822cb8758230b91a56b19d0a41b6726075c7\",\"urls\":[\"bzzr://89ea7c36d573c7ac869c5290792fa186af45f48545c8e6726d85f0a796edb528\"]},\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x0ebdca4da96c57978223af3d63ec4b8e85b5e610f9d93ba16c6ef3eab947445f\",\"urls\":[\"bzzr://ae3f9b4b3c73e819e3bb6d51b737239038833430f14049d5f2f9f9d07fa6a94b\"]},\"openzeppelin-solidity/contracts/introspection/SupportsInterfaceWithLookup.sol\":{\"keccak256\":\"0xac3cd6a1111cdaafb41182fe8d01508b4540df4f1c2034c96d8452c840ac4094\",\"urls\":[\"bzzr://b852ec1cf3167b19aa993135cda5f0bf2c0590bae829f2d9287314fcdcc50ded\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e3038038062001e30833981018060405281019080805182019291906020018051820192919050505081816200007f6301ffc9a77c01000000000000000000000000000000000000000000000000000000000262000135640100000000026401000000009004565b620000bc6380ac58cd7c01000000000000000000000000000000000000000000000000000000000262000135640100000000026401000000009004565b8160059080519060200190620000d4929190620001f3565b508060069080519060200190620000ed929190620001f3565b5050506200012d63780e9d637c01000000000000000000000000000000000000000000000000000000000262000135640100000000026401000000009004565b5050620002a2565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200018757600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023657805160ff191683800117855562000267565b8280016001018555821562000267579182015b828111156200026657825182559160200191906001019062000249565b5b5090506200027691906200027a565b5090565b6200029f91905b808211156200029b57600081600090555060010162000281565b5090565b90565b611b7e80620002b26000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461010157806306fdde0314610165578063081812fc146101f5578063095ea7b31461026257806318160ddd146102af57806319fa8f50146102da57806323b872dd146103435780632f745c59146103b057806342842e0e146104115780634f6ccce71461047e5780636352211e146104bf57806370a082311461052c57806395d89b4114610583578063a22cb46514610613578063aa5965ae14610662578063b88d4fde146106a3578063c87b56dd14610756578063e985e9c5146107fc575b600080fd5b34801561010d57600080fd5b5061014b60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610877565b604051808215151515815260200191505060405180910390f35b34801561017157600080fd5b5061017a6108de565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ba57808201518184015260208101905061019f565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020157600080fd5b5061022060048036038101908080359060200190929190505050610980565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026e57600080fd5b506102ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109d1565b005b3480156102bb57600080fd5b506102c4610b16565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b506102ef610b23565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561034f57600080fd5b506103ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4a565b005b3480156103bc57600080fd5b506103fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c19565b6040518082815260200191505060405180910390f35b34801561041d57600080fd5b5061047c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c90565b005b34801561048a57600080fd5b506104a960048036038101908080359060200190929190505050610cb1565b6040518082815260200191505060405180910390f35b3480156104cb57600080fd5b506104ea60048036038101908080359060200190929190505050610ce9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053857600080fd5b5061056d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d67565b6040518082815260200191505060405180910390f35b34801561058f57600080fd5b50610598610deb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105d85780820151818401526020810190506105bd565b50505050905090810190601f1680156106055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561061f57600080fd5b50610660600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610e8d565b005b34801561066e57600080fd5b5061068d60048036038101908080359060200190929190505050610fc9565b6040518082815260200191505060405180910390f35b3480156106af57600080fd5b50610754600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610fec565b005b34801561076257600080fd5b5061078160048036038101908080359060200190929190505050611014565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c15780820151818401526020810190506107a6565b50505050905090810190601f1680156107ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561080857600080fd5b5061085d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110dd565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109765780601f1061094b57610100808354040283529160200191610976565b820191906000526020600020905b81548152906001019060200180831161095957829003601f168201915b5050505050905090565b600061098b82611171565b151561099657600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109dc82610ce9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a1957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a595750610a5881336110dd565b5b1515610a6457600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600a80549050905090565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b610b5433826111e3565b1515610b5f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610b9b57600080fd5b610ba58382611278565b610baf838261137b565b610bb98282611537565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610c2483610d67565b82101515610c3157600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610c7d57fe5b9060005260206000200154905092915050565b610cac8383836020604051908101604052806000815250610fec565b505050565b6000610cbb610b16565b82101515610cc857600080fd5b600a82815481101515610cd757fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d5e57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610da457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e835780601f10610e5857610100808354040283529160200191610e83565b820191906000526020600020905b815481529060010190602001808311610e6657829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ec857600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600a81815481101515610fd857fe5b906000526020600020016000915090505481565b610ff7848484610b4a565b6110038484848461160e565b151561100e57600080fd5b50505050565b606061101f82611171565b151561102a57600080fd5b600760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110d15780601f106110a6576101008083540402835291602001916110d1565b820191906000526020600020905b8154815290600101906020018083116110b457829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806111ef83610ce9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061125e57508373ffffffffffffffffffffffffffffffffffffffff1661124684610980565b73ffffffffffffffffffffffffffffffffffffffff16145b8061126f575061126e81856110dd565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661129882610ce9565b73ffffffffffffffffffffffffffffffffffffffff161415156112ba57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113775760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600061138a8585611830565b600960008581526020019081526020016000205492506113f66001600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061195f90919063ffffffff16565b9150600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561144457fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561149e57fe5b9060005260206000200181905550600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036114fe9190611b01565b50600060096000868152602001908152602001600020819055508260096000838152602001908152602001600020819055505050505050565b60006115438383611978565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806009600084815260200190815260200160002081905550505050565b6000806116308573ffffffffffffffffffffffffffffffffffffffff16611ad2565b151561163f5760019150611827565b8473ffffffffffffffffffffffffffffffffffffffff16634c3e3934338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611734578082015181840152602081019050611719565b50505050905090810190601f1680156117615780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561178357600080fd5b505af1158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b8173ffffffffffffffffffffffffffffffffffffffff1661185082610ce9565b73ffffffffffffffffffffffffffffffffffffffff1614151561187257600080fd5b6118c56001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461195f90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561196d57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156119e657600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a8b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ae590919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b60008183019050828110151515611af857fe5b80905092915050565b815481835581811115611b2857818360005260206000209182019101611b279190611b2d565b5b505050565b611b4f91905b80821115611b4b576000816000905550600101611b33565b5090565b905600a165627a7a723058208a3566c382d0d2eeb975db682be17757b059cc8ec65b2465447918287cee5cf50029",
  "deployedBytecode": "",
  "sourceMap": "114:432:16:-;;;368:176;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:176:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;486:5;505:7;649:38:20;274:10;668:18;;649;;;:38;;;:::i;:::-;1875:39:14;1245:10;1894:19;;1875:18;;;:39;;;:::i;:::-;1004:5:17;996;:13;;;;;;;;;;;;:::i;:::-;;1029:7;1019;:17;;;;;;;;;;;;:::i;:::-;;914:129;;792:49:15;690:10;811:29;;792:18;;;:49;;;:::i;:::-;368:176:16;;114:432;;987:156:20;1081:10;1065:26;;:12;:26;;;;;1057:35;;;;;;;;1134:4;1098:19;:33;1118:12;1098:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;987:156;:::o;114:432:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "114:432:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:142:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:76:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1097:76:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1097:76:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3698:186:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3698:186:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:327;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3077:327:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1661:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1661:85:15;;;;;;;;;;;;;;;;;;;;;;;230:54:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:54:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5407:374:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5407:374:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:190:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:190:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6396:168:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6396:168:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2099:148:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2099:148:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:212:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2458:212:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:184;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:184:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:80:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1229:80:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1229:80:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:242:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4263:242:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:27:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:27:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6848:254:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6848:254:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:177:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1442:177:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1442:177:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4869:171:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4869:171:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:20;858:4;879:19;:33;899:12;879:33;;;;;;;;;;;;;;;;;;;;;;;;;;;872:40;;775:142;;;:::o;1097:76:17:-;1136:6;1161:5;1154:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:76;:::o;3698:186:14:-;3785:7;3817:17;3825:8;3817:7;:17::i;:::-;3809:26;;;;;;;;3852:15;:25;3868:8;3852:25;;;;;;;;;;;;;;;;;;;;;3845:32;;3698:186;;;:::o;3077:327::-;3164:14;3181:17;3189:8;3181:7;:17::i;:::-;3164:34;;3223:6;3216:13;;:3;:13;;;;3208:22;;;;;;;;3262:6;3248:20;;:10;:20;;;:60;;;;3272:36;3289:6;3297:10;3272:16;:36::i;:::-;3248:60;3240:69;;;;;;;;3348:3;3320:15;:25;3336:8;3320:25;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3388:8;3383:3;3366:31;;3375:6;3366:31;;;;;;;;;;;;3077:327;;;:::o;1661:85:15:-;1705:7;1725:10;:17;;;;1718:24;;1661:85;:::o;230:54:20:-;274:10;230:54;;;:::o;5407:374:14:-;5530:40;5549:10;5561:8;5530:18;:40::i;:::-;5522:49;;;;;;;;5604:1;5589:17;;:3;:17;;;;5581:26;;;;;;;;5618:31;5633:5;5640:8;5618:14;:31::i;:::-;5659:33;5676:5;5683:8;5659:16;:33::i;:::-;5702:26;5714:3;5719:8;5702:11;:26::i;:::-;5765:8;5760:3;5744:30;;5753:5;5744:30;;;;;;;;;;;;5407:374;;;:::o;1250:190:15:-;1347:7;1379:17;1389:6;1379:9;:17::i;:::-;1370:6;:26;1362:35;;;;;;;;1408:12;:20;1421:6;1408:20;;;;;;;;;;;;;;;1429:6;1408:28;;;;;;;;;;;;;;;;;;1401:35;;1250:190;;;;:::o;6396:168:14:-;6515:42;6532:5;6539:3;6544:8;6515:42;;;;;;;;;;;;;:16;:42::i;:::-;6396:168;;;:::o;2099:148:15:-;2167:7;2200:13;:11;:13::i;:::-;2191:6;:22;2182:32;;;;;;;;2225:10;2236:6;2225:18;;;;;;;;;;;;;;;;;;2218:25;;2099:148;;;:::o;2458:212:14:-;2539:7;2563:14;2580:11;:21;2592:8;2580:21;;;;;;;;;;;;;;;;;;;;;2563:38;;2637:1;2619:20;;:6;:20;;;;2611:29;;;;;;;;2657:6;2650:13;;2458:212;;;;:::o;2133:184::-;2215:7;2265:1;2247:20;;:6;:20;;;;2239:29;;;;;;;;2285:17;:25;2303:6;2285:25;;;;;;;;;;;;;;;;2278:32;;2133:184;;;:::o;1229:80:17:-;1270:6;1295:7;1288:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:80;:::o;4263:242:14:-;4373:10;4366:17;;:3;:17;;;;4358:26;;;;;;;;4432:9;4394:18;:30;4413:10;4394:30;;;;;;;;;;;;;;;:35;4425:3;4394:35;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;4483:3;4456:42;;4471:10;4456:42;;;4488:9;4456:42;;;;;;;;;;;;;;;;;;;;;;4263:242;;:::o;435:27:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6848:254:14:-;6988:34;7001:5;7008:3;7013:8;6988:12;:34::i;:::-;7040:54;7066:5;7073:3;7078:8;7088:5;7040:25;:54::i;:::-;7032:63;;;;;;;;6848:254;;;;:::o;1442:177:17:-;1526:6;1557:17;1565:8;1557:7;:17::i;:::-;1549:26;;;;;;;;1592:10;:20;1603:8;1592:20;;;;;;;;;;;1585:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:177;;;:::o;4869:171:14:-;4973:4;4996:18;:26;5015:6;4996:26;;;;;;;;;;;;;;;:37;5023:9;4996:37;;;;;;;;;;;;;;;;;;;;;;;;;4989:44;;4869:171;;;;:::o;7255:187::-;7339:4;7360:14;7377:11;:21;7389:8;7377:21;;;;;;;;;;;;;;;;;;;;;7360:38;;7433:1;7415:20;;:6;:20;;;;7408:27;;7255:187;;;;:::o;7654:359::-;7790:4;7811:14;7828:17;7836:8;7828:7;:17::i;:::-;7811:34;;7889:6;7876:19;;:9;:19;;;:69;;;;7936:9;7911:34;;:21;7923:8;7911:11;:21::i;:::-;:34;;;7876:69;:120;;;;7961:35;7978:6;7986:9;7961:16;:35::i;:::-;7876:120;7856:150;;7654:359;;;;;:::o;9051:259::-;9179:6;9158:27;;:17;9166:8;9158:7;:17::i;:::-;:27;;;9150:36;;;;;;;;9237:1;9200:39;;:15;:25;9216:8;9200:25;;;;;;;;;;;;;;;;;;;;;:39;;;;9196:108;;;9291:1;9255:15;:25;9271:8;9255:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;9196:108;9051:259;;:::o;2856:465:15:-;2979:19;3032:23;3095:18;2935:39;2958:5;2965:8;2935:22;:39::i;:::-;3001:17;:27;3019:8;3001:27;;;;;;;;;;;;2979:49;;3058:33;3089:1;3058:12;:19;3071:5;3058:19;;;;;;;;;;;;;;;:26;;;;:30;;:33;;;;:::i;:::-;3032:59;;3116:12;:19;3129:5;3116:19;;;;;;;;;;;;;;;3136:15;3116:36;;;;;;;;;;;;;;;;;;3095:57;;3192:10;3157:12;:19;3170:5;3157:19;;;;;;;;;;;;;;;3177:11;3157:32;;;;;;;;;;;;;;;;;:45;;;;3206:12;:19;3219:5;3206:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;3269:1;3239:17;:27;3257:8;3239:27;;;;;;;;;;;:31;;;;3306:11;3274:17;:29;3292:10;3274:29;;;;;;;;;;;:43;;;;2856:465;;;;;:::o;2432:231::-;2540:15;2504:32;2522:3;2527:8;2504:17;:32::i;:::-;2558:12;:17;2571:3;2558:17;;;;;;;;;;;;;;;:24;;;;2540:42;;2586:12;:17;2599:3;2586:17;;;;;;;;;;;;;;;2609:8;2586:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2586:32:15;;;;;;;;;;;;;;;;;;;;;;2652:7;2622:17;:27;2640:8;2622:27;;;;;;;;;;;:37;;;;2432:231;;;:::o;10446:415:14:-;10612:4;10701:13;10638:16;:3;:14;;;:16::i;:::-;10637:17;10633:59;;;10677:4;10670:11;;;;10633:59;10733:3;10717:34;;;10765:10;10777:5;10784:8;10794:5;10717:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10717:92:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10717:92:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10717:92:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10717:92:14;;;;;;;;;;;;;;;;10701:108;;631:10;10837:16;;10827:26;;;:6;:26;;;;10819:35;;10446:415;;;;;;;;:::o;9929:254::-;10058:5;10037:26;;:17;10045:8;10037:7;:17::i;:::-;:26;;;10029:35;;;;;;;;10101:31;10130:1;10101:17;:24;10119:5;10101:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;10074:17;:24;10092:5;10074:24;;;;;;;;;;;;;;;:58;;;;10174:1;10142:11;:21;10154:8;10142:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;9929:254;;:::o;1060:116:21:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;9494:245:14:-;9628:1;9595:35;;:11;:21;9607:8;9595:21;;;;;;;;;;;;;;;;;;;;;:35;;;9587:44;;;;;;;;9665:3;9641:11;:21;9653:8;9641:21;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;9703:29;9730:1;9703:17;:22;9721:3;9703:22;;;;;;;;;;;;;;;;:26;;:29;;;;:::i;:::-;9678:17;:22;9696:3;9678:22;;;;;;;;;;;;;;;:54;;;;9494:245;;:::o;438:578:18:-;496:4;508:12;983:5;971:18;963:26;;1010:1;1003:4;:8;996:15;;438:578;;;;:::o;1238:128:21:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;114:432:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './RFTNFT.sol';\nimport './RFTNFTMetadata.sol';\nimport './RFTNFTEnumerable.sol';\n\ncontract RFTNFTFull is RFTNFT, RFTNFTMetadata, RFTNFTEnumerable {\n    /**\n     * @dev Constructor for full RFT NFT contract\n     * @param _name - Name for a set of NFTs\n     * @param _symbol - Symbol (abbreviated from name) for a set of NFTs\n     */\n    constructor (\n        string _name,\n        string _symbol\n    ) \n        public \n        RFTNFTMetadata(\n            _name,\n            _symbol\n        ) \n    {\n        \n    }\n}",
  "sourcePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTFull.sol",
  "ast": {
    "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTFull.sol",
    "exportedSymbols": {
      "RFTNFTFull": [
        2455
      ]
    },
    "id": 2456,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2433,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:16"
      },
      {
        "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFT.sol",
        "file": "./RFTNFT.sol",
        "id": 2434,
        "nodeType": "ImportDirective",
        "scope": 2456,
        "sourceUnit": 2138,
        "src": "26:22:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTMetadata.sol",
        "file": "./RFTNFTMetadata.sol",
        "id": 2435,
        "nodeType": "ImportDirective",
        "scope": 2456,
        "sourceUnit": 2580,
        "src": "49:30:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTEnumerable.sol",
        "file": "./RFTNFTEnumerable.sol",
        "id": 2436,
        "nodeType": "ImportDirective",
        "scope": 2456,
        "sourceUnit": 2432,
        "src": "80:32:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2437,
              "name": "RFTNFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2137,
              "src": "137:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RFTNFT_$2137",
                "typeString": "contract RFTNFT"
              }
            },
            "id": 2438,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2439,
              "name": "RFTNFTMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2579,
              "src": "145:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RFTNFTMetadata_$2579",
                "typeString": "contract RFTNFTMetadata"
              }
            },
            "id": 2440,
            "nodeType": "InheritanceSpecifier",
            "src": "145:14:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2441,
              "name": "RFTNFTEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2431,
              "src": "161:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RFTNFTEnumerable_$2431",
                "typeString": "contract RFTNFTEnumerable"
              }
            },
            "id": 2442,
            "nodeType": "InheritanceSpecifier",
            "src": "161:16:16"
          }
        ],
        "contractDependencies": [
          271,
          2137,
          2431,
          2579,
          2608,
          2659
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2455,
        "linearizedBaseContracts": [
          2455,
          2431,
          2579,
          2137,
          271,
          2659,
          2608
        ],
        "name": "RFTNFTFull",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2453,
              "nodeType": "Block",
              "src": "528:16:16",
              "statements": []
            },
            "documentation": "@dev Constructor for full RFT NFT contract\n@param _name - Name for a set of NFTs\n@param _symbol - Symbol (abbreviated from name) for a set of NFTs",
            "id": 2454,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2449,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2444,
                    "src": "486:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2450,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2446,
                    "src": "505:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2448,
                  "name": "RFTNFTMetadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2579,
                  "src": "458:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RFTNFTMetadata_$2579_$",
                    "typeString": "type(contract RFTNFTMetadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "458:64:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2454,
                  "src": "390:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2446,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2454,
                  "src": "412:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "380:52:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 2452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:16"
            },
            "scope": 2455,
            "src": "368:176:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2456,
        "src": "114:432:16"
      }
    ],
    "src": "0:546:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTFull.sol",
      "exportedSymbols": {
        "RFTNFTFull": [
          2455
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 2433,
        "name": "PragmaDirective",
        "src": "0:24:16"
      },
      {
        "attributes": {
          "SourceUnit": 2138,
          "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFT.sol",
          "file": "./RFTNFT.sol",
          "scope": 2456,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2434,
        "name": "ImportDirective",
        "src": "26:22:16"
      },
      {
        "attributes": {
          "SourceUnit": 2580,
          "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTMetadata.sol",
          "file": "./RFTNFTMetadata.sol",
          "scope": 2456,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2435,
        "name": "ImportDirective",
        "src": "49:30:16"
      },
      {
        "attributes": {
          "SourceUnit": 2432,
          "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/rft/RFTNFTEnumerable.sol",
          "file": "./RFTNFTEnumerable.sol",
          "scope": 2456,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2436,
        "name": "ImportDirective",
        "src": "80:32:16"
      },
      {
        "attributes": {
          "contractDependencies": [
            271,
            2137,
            2431,
            2579,
            2608,
            2659
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2455,
            2431,
            2579,
            2137,
            271,
            2659,
            2608
          ],
          "name": "RFTNFTFull",
          "scope": 2456
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "RFTNFT",
                  "referencedDeclaration": 2137,
                  "type": "contract RFTNFT"
                },
                "id": 2437,
                "name": "UserDefinedTypeName",
                "src": "137:6:16"
              }
            ],
            "id": 2438,
            "name": "InheritanceSpecifier",
            "src": "137:6:16"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "RFTNFTMetadata",
                  "referencedDeclaration": 2579,
                  "type": "contract RFTNFTMetadata"
                },
                "id": 2439,
                "name": "UserDefinedTypeName",
                "src": "145:14:16"
              }
            ],
            "id": 2440,
            "name": "InheritanceSpecifier",
            "src": "145:14:16"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "RFTNFTEnumerable",
                  "referencedDeclaration": 2431,
                  "type": "contract RFTNFTEnumerable"
                },
                "id": 2441,
                "name": "UserDefinedTypeName",
                "src": "161:16:16"
              }
            ],
            "id": 2442,
            "name": "InheritanceSpecifier",
            "src": "161:16:16"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Constructor for full RFT NFT contract\n@param _name - Name for a set of NFTs\n@param _symbol - Symbol (abbreviated from name) for a set of NFTs",
              "implemented": true,
              "isConstructor": true,
              "name": "",
              "payable": false,
              "scope": 2455,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 2454,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2443,
                        "name": "ElementaryTypeName",
                        "src": "390:6:16"
                      }
                    ],
                    "id": 2444,
                    "name": "VariableDeclaration",
                    "src": "390:12:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 2454,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2445,
                        "name": "ElementaryTypeName",
                        "src": "412:6:16"
                      }
                    ],
                    "id": 2446,
                    "name": "VariableDeclaration",
                    "src": "412:14:16"
                  }
                ],
                "id": 2447,
                "name": "ParameterList",
                "src": "380:52:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2452,
                "name": "ParameterList",
                "src": "528:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2579,
                      "type": "type(contract RFTNFTMetadata)",
                      "value": "RFTNFTMetadata"
                    },
                    "id": 2448,
                    "name": "Identifier",
                    "src": "458:14:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2444,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 2449,
                    "name": "Identifier",
                    "src": "486:5:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2446,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 2450,
                    "name": "Identifier",
                    "src": "505:7:16"
                  }
                ],
                "id": 2451,
                "name": "ModifierInvocation",
                "src": "458:64:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2453,
                "name": "Block",
                "src": "528:16:16"
              }
            ],
            "id": 2454,
            "name": "FunctionDefinition",
            "src": "368:176:16"
          }
        ],
        "id": 2455,
        "name": "ContractDefinition",
        "src": "114:432:16"
      }
    ],
    "id": 2456,
    "name": "SourceUnit",
    "src": "0:546:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-09T13:44:50.059Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves to transfer selected NFT (_tokenId) by specific address (_to).",
        "params": {
          "_to": "- Receiver address of transfer approve for selected NFT",
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "balanceOf(address)": {
        "details": "Returns NFT Token balance of selected address (_owner), which means, how many NFT tokens owner of address has on his balance.",
        "params": {
          "_owner": "- Address of NFT holder"
        }
      },
      "getApproved(uint256)": {
        "details": "Returns address of approved for transfer address for selected NFT(_tokenId). ",
        "params": {
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if all NFT's of certain address(_owner) is approved to transfer by another address(_operator)",
        "params": {
          "_operator": "- Receipient address of transfer rights",
          "_owner": "- Address of NFT's owner"
        }
      },
      "name()": {
        "details": "Getter for RFT name"
      },
      "ownerOf(uint256)": {
        "details": "Returns owner address of selected NFT token (_tokenId).",
        "params": {
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safe implementation of transferFrom function, which additionally checks that NFT receiver address is NFT compatible by calling method of Receipient contract address and supplying sender address, previous owner of NFT, NFT id",
        "params": {
          "_from": "- Address of NFT owner",
          "_to": "- Address of NFT receiver",
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Extended safeTransferFrom function with bytes parameter",
        "params": {
          "_data": "- Bytes additional transaction data",
          "_from": "- Address of NFT sender",
          "_to": "- Address of NFT receiver",
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve/Disapprove(depends on _approved value) transfering of all  caller's NFTs by specific address (_to).",
        "params": {
          "_approved": "- Approval status",
          "_to": "- Receiver of approvals for all NFT's owned by caller address"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Getter for RFT symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT id from all NFT's array by using its index.",
        "params": {
          "_index": "- Index inside array of all NFT"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Returns NFT id owned by the supplied address and index in  the owner's NFT array. Index could be from 0 to n, where n is owner's balance of NFT's",
        "params": {
          "_index": "- Index inside array of owner's NFT",
          "_owner": "- Address of NFT's owner"
        }
      },
      "tokenURI(uint256)": {
        "details": "Get Uniform Resource Identifier of selected NFT ",
        "params": {
          "_tokenId": "- Unique identifier of NFT"
        }
      },
      "totalSupply()": {
        "details": "Returns total amount of NFT's presented in this NFT contract"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer selected NFT (_tokenId) from owner (_from) to new owner(_to)",
        "params": {
          "_from": "- Address of NFT's owner ",
          "_to": "- Address of NFT receiver",
          "_tokenId": "- Unique identifier of NFT"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Approving is needed when you want to give rights for some identified party to transfer your token. Approval event will be generated once approved."
      },
      "getApproved(uint256)": {
        "notice": "Return approved address for NFT, if there is none  approved address for this NFT, it will return zero address"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Returns true in case it was called  setApprovalForAll(_operator, true), otherwise - false"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Safe transfer is being used instead of transferFrom, in case we need  to check that recipient address is compatible with NFT (only in case if  receipient address is contract) "
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Needed in case you want to give rights to transfer of all your NFT's to some address"
      },
      "tokenByIndex(uint256)": {
        "notice": "All NFT's are added during minting to array, for example we have minted 2 NFT's for 2 users, in case we call tokenByIndex(1), it will return unique NFT id, which is located by index 1"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "notice": "Every address in contract has array of NFT ids, and this  method provides ability to navigate in it."
      },
      "totalSupply()": {
        "notice": "For example we have minted 2 NFTs for 2 users(1 NFT per 1 user),  in this case totalSupply will equal to 2"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transaction sender(msg.sender) should be owner or approved address by  approve or setApprovalForAll"
      }
    }
  }
}