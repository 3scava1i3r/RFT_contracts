{
  "contractName": "AutoIncrementing",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"methods\":{},\"title\":\"AutoIncrementing\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/juuzou/Documents/RFT_contracts/contracts/contracts/AutoIncrementing.sol\":\"AutoIncrementing\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/juuzou/Documents/RFT_contracts/contracts/contracts/AutoIncrementing.sol\":{\"keccak256\":\"0xd3983d32d5a47c3833d70d2e376dc9c5099d779274c630d62d639df584600413\",\"urls\":[\"bzzr://970820c8e62cbb8895b8609041ec0074f2677d5342e9cd40bea518d3efc79b7c\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820ca45a434ffdb19962f8b4d9fb403703efb90dd3f68f6e6e7c205d5944a25c25d0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820ca45a434ffdb19962f8b4d9fb403703efb90dd3f68f6e6e7c205d5944a25c25d0029",
  "sourceMap": "693:245:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "693:245:1:-;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\n\n/**\n * @title AutoIncrementing\n * @author Matt Condon (@shrugs)\n * @dev Provides an auto-incrementing uint256 id acquired by the `Counter#nextId` getter.\n * Use this for issuing ERC721Token ids or keeping track of request ids, anything you want, really.\n *\n * Include with `using AutoIncrementing for AutoIncrementing.Counter;`\n * @notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\n * Does not protect from overflows, but if you have 2^256 ids, you have other problems.\n * (But actually, it's generally impossible to increment a counter this many times, energy wise\n * so it's not something you have to worry about.)\n */\nlibrary AutoIncrementing {\n\n  struct Counter {\n    uint256 prevId; // default: 0\n  }\n\n  function nextId(Counter storage _counter)\n    internal\n    returns (uint256)\n  {\n    _counter.prevId = _counter.prevId + 1;\n    return _counter.prevId;\n  }\n}\n",
  "sourcePath": "/home/juuzou/Documents/RFT_contracts/contracts/contracts/AutoIncrementing.sol",
  "ast": {
    "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/contracts/AutoIncrementing.sol",
    "exportedSymbols": {
      "AutoIncrementing": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title AutoIncrementing\n@author Matt Condon (@shrugs)\n@dev Provides an auto-incrementing uint256 id acquired by the `Counter#nextId` getter.\nUse this for issuing ERC721Token ids or keeping track of request ids, anything you want, really.\n * Include with `using AutoIncrementing for AutoIncrementing.Counter;`\n@notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\nDoes not protect from overflows, but if you have 2^256 ids, you have other problems.\n(But actually, it's generally impossible to increment a counter this many times, energy wise\nso it's not something you have to worry about.)",
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44
        ],
        "name": "AutoIncrementing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AutoIncrementing.Counter",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 22,
                "name": "prevId",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "744:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 44,
            "src": "723:54:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "860:76:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 30,
                        "name": "_counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "866:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$23_storage_ptr",
                          "typeString": "struct AutoIncrementing.Counter storage pointer"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "prevId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "866:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "_counter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "884:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$23_storage_ptr",
                            "typeString": "struct AutoIncrementing.Counter storage pointer"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "prevId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22,
                        "src": "884:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "902:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "884:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "866:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "866:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "_counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "916:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$23_storage_ptr",
                        "typeString": "struct AutoIncrementing.Counter storage pointer"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "prevId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "916:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 41,
                  "nodeType": "Return",
                  "src": "909:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "nextId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "_counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "797:24:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$23_storage_ptr",
                    "typeString": "struct AutoIncrementing.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "797:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$23_storage_ptr",
                      "typeString": "struct AutoIncrementing.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "796:26:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "849:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "848:9:1"
            },
            "scope": 44,
            "src": "781:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 45,
        "src": "693:245:1"
      }
    ],
    "src": "0:939:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/juuzou/Documents/RFT_contracts/contracts/contracts/AutoIncrementing.sol",
      "exportedSymbols": {
        "AutoIncrementing": [
          44
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 20,
        "name": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@title AutoIncrementing\n@author Matt Condon (@shrugs)\n@dev Provides an auto-incrementing uint256 id acquired by the `Counter#nextId` getter.\nUse this for issuing ERC721Token ids or keeping track of request ids, anything you want, really.\n * Include with `using AutoIncrementing for AutoIncrementing.Counter;`\n@notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\nDoes not protect from overflows, but if you have 2^256 ids, you have other problems.\n(But actually, it's generally impossible to increment a counter this many times, energy wise\nso it's not something you have to worry about.)",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            44
          ],
          "name": "AutoIncrementing",
          "scope": 45
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "AutoIncrementing.Counter",
              "name": "Counter",
              "scope": 44,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "prevId",
                  "scope": 23,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "744:7:1"
                  }
                ],
                "id": 22,
                "name": "VariableDeclaration",
                "src": "744:14:1"
              }
            ],
            "id": 23,
            "name": "StructDefinition",
            "src": "723:54:1"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "nextId",
              "payable": false,
              "scope": 44,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_counter",
                      "scope": 43,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct AutoIncrementing.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 23,
                          "type": "struct AutoIncrementing.Counter"
                        },
                        "id": 24,
                        "name": "UserDefinedTypeName",
                        "src": "797:7:1"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "797:24:1"
                  }
                ],
                "id": 26,
                "name": "ParameterList",
                "src": "796:26:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 43,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 27,
                        "name": "ElementaryTypeName",
                        "src": "849:7:1"
                      }
                    ],
                    "id": 28,
                    "name": "VariableDeclaration",
                    "src": "849:7:1"
                  }
                ],
                "id": 29,
                "name": "ParameterList",
                "src": "848:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "prevId",
                              "referencedDeclaration": 22,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25,
                                  "type": "struct AutoIncrementing.Counter storage pointer",
                                  "value": "_counter"
                                },
                                "id": 30,
                                "name": "Identifier",
                                "src": "866:8:1"
                              }
                            ],
                            "id": 32,
                            "name": "MemberAccess",
                            "src": "866:15:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "prevId",
                                  "referencedDeclaration": 22,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 25,
                                      "type": "struct AutoIncrementing.Counter storage pointer",
                                      "value": "_counter"
                                    },
                                    "id": 33,
                                    "name": "Identifier",
                                    "src": "884:8:1"
                                  }
                                ],
                                "id": 34,
                                "name": "MemberAccess",
                                "src": "884:15:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 35,
                                "name": "Literal",
                                "src": "902:1:1"
                              }
                            ],
                            "id": 36,
                            "name": "BinaryOperation",
                            "src": "884:19:1"
                          }
                        ],
                        "id": 37,
                        "name": "Assignment",
                        "src": "866:37:1"
                      }
                    ],
                    "id": 38,
                    "name": "ExpressionStatement",
                    "src": "866:37:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 29
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "prevId",
                          "referencedDeclaration": 22,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "struct AutoIncrementing.Counter storage pointer",
                              "value": "_counter"
                            },
                            "id": 39,
                            "name": "Identifier",
                            "src": "916:8:1"
                          }
                        ],
                        "id": 40,
                        "name": "MemberAccess",
                        "src": "916:15:1"
                      }
                    ],
                    "id": 41,
                    "name": "Return",
                    "src": "909:22:1"
                  }
                ],
                "id": 42,
                "name": "Block",
                "src": "860:76:1"
              }
            ],
            "id": 43,
            "name": "FunctionDefinition",
            "src": "781:155:1"
          }
        ],
        "id": 44,
        "name": "ContractDefinition",
        "src": "693:245:1"
      }
    ],
    "id": 45,
    "name": "SourceUnit",
    "src": "0:939:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-10T19:21:32.208Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "methods": {},
    "title": "AutoIncrementing"
  },
  "userdoc": {
    "methods": {}
  }
}